{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","isOpen","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","width","Collapse","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","innerRef","input","check","color","Component","Footer","RenderMenuItem","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","Row","for","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","leaderss","variable","lead","Media","tag","left","middle","object","body","heading","About","CardHeader","title","list","leaders","CommentForm","postComment","dishId","rating","author","comment","DishDetail","coment","comments","top","comentarios","param","dateToDate","Date","month","toLocaleString","year","dating","date","renderDish","renderComments","defaultProps","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","addLeaders","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mVAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,qDAChB,2CCNCC,EAAU,yB,QCOvB,SAASC,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAElC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKT,kBAAC,gBAAD,CAAeC,IAAE,EACbC,eAAgB,CACZC,cAAe,gCAEvB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,IAAKV,EAAUE,EAAKS,MAAOC,IAAKV,EAAKW,OAC9C,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAAYb,EAAKW,MAChBX,EAAKc,YAAc,kBAACC,EAAA,EAAD,KAAef,EAAKc,aAA8B,KACtE,kBAACE,EAAA,EAAD,KAAWhB,EAAKiB,gBAgCbC,MAxBf,SAAcC,GACV,OACI,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMmB,EAAMC,KACxBnB,UAAWkB,EAAME,cACjBnB,QAASiB,EAAMG,iBAEnB,yBAAKzB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMmB,EAAMI,UACxBtB,UAAWkB,EAAMK,cACjBtB,QAASiB,EAAMM,iBAEnB,yBAAK5B,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMmB,EAAMO,OACxBzB,UAAWkB,EAAMQ,eACjBzB,QAASiB,EAAMS,qB,sJCqEpBC,E,kDApHX,WAAYV,GAAO,IAAD,8BACd,cAAMA,IACDW,MAAQ,CACTC,WAAW,EACXC,aAAa,GAEjB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBARL,E,wDAYdG,KAAKC,SAAS,CACVP,WAAYM,KAAKP,MAAMS,W,oCAK3BF,KAAKC,SAAS,CACVN,aAAcK,KAAKP,MAAME,gB,kCAIrBQ,GACRH,KAAKF,cACLM,MAAM,aAAeJ,KAAKK,SAASC,MAAQ,aAAeN,KAAKO,SAASD,MAClE,aAAeN,KAAKQ,SAASC,SACnCN,EAAMO,mB,+BAGD,IAAD,OACJ,OACI,oCACA,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKrD,UAAU,aACX,kBAACsD,EAAA,EAAD,CAAeC,QAASf,KAAKJ,YACjC,kBAACoB,EAAA,EAAD,CAAaxD,UAAU,UAAUyD,KAAK,KAClC,yBAAK9C,IAAI,yBAAyB+C,OAAO,KAAKC,MAAM,KACpD9C,IAAI,2BAER,kBAAC+C,EAAA,EAAD,CAAUlB,OAAQF,KAAKP,MAAMS,OAAQmB,QAAM,GACvC,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS/D,UAAU,WAAWgE,GAAG,SAC7B,0BAAMhE,UAAU,qBADpB,SAIJ,kBAAC+D,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS/D,UAAU,WAAWgE,GAAG,YAC7B,0BAAMhE,UAAU,qBADpB,aAIJ,kBAAC+D,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS/D,UAAU,WAAWgE,GAAG,SAC7B,0BAAMhE,UAAU,qBADpB,SAIJ,kBAAC+D,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS/D,UAAU,WAAWgE,GAAG,cAC7B,0BAAMhE,UAAU,6BADpB,gBAKR,kBAAC8D,EAAA,EAAD,CAAK9D,UAAU,UAAU6D,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAQC,SAAO,EAACX,QAASf,KAAKF,aAC1B,0BAAMtC,UAAU,wBADpB,cAQhB,kBAACmE,EAAA,EAAD,KACI,yBAAKnE,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAQhB,kBAACoE,EAAA,EAAD,CAAO1B,OAAQF,KAAKP,MAAME,YAAakC,OAAQ7B,KAAKF,aAChD,kBAACgC,EAAA,EAAD,CAAaD,OAAQ7B,KAAKF,aAA1B,SACA,kBAACiC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,SAAUjC,KAAKD,aACjB,kBAACmC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,GAAG,WAAWjE,KAAK,WAClCkE,SAAU,SAACC,GAAD,OAAW,EAAKpC,SAAWoC,MAE7C,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,GAAG,WAAWjE,KAAK,WACtCkE,SAAU,SAACC,GAAD,OAAW,EAAKlC,SAAWkC,MAE7C,kBAACP,EAAA,EAAD,CAAWQ,OAAK,GACZ,kBAACP,EAAA,EAAD,CAAOO,OAAK,GACR,kBAACL,EAAA,EAAD,CAAOC,KAAK,WAAWhE,KAAK,WACxBkE,SAAU,SAACC,GAAD,OAAW,EAAKjC,SAAWiC,KAF7C,gBAMJ,kBAAChB,EAAA,EAAD,CAAQa,KAAK,SAAShC,MAAM,SAASqC,MAAM,WAA3C,iB,GA7GHC,aC6CNC,MAhDf,SAAgB/D,GACZ,OACA,yBAAKtB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMgE,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,eACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,eAGZ,yBAAKhE,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGyD,KAAK,6BAAR,wBAI1C,yBAAKzD,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCyD,KAAK,uBAAsB,uBAAGzD,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCyD,KAAK,2CAA0C,uBAAGzD,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCyD,KAAK,+BAA8B,uBAAGzD,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCyD,KAAK,uBAAsB,uBAAGzD,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCyD,KAAK,uBAAsB,uBAAGzD,UAAU,mBACtF,uBAAGA,UAAU,sBAAsByD,KAAK,WAAU,uBAAGzD,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,2BCpClB,SAASsF,EAAT,GAA2C,IAAjB/D,EAAgB,EAAhBA,KAAgB,EAAVgC,QAC5B,OACE,kBAAC9C,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMuD,GAAE,gBAAWzC,EAAKwD,KACpB,kBAACrE,EAAA,EAAD,CAASiD,MAAM,OAAOhD,IAAKV,EAAUsB,EAAKX,MAAOC,IAAKU,EAAKT,OAC3D,kBAACyE,EAAA,EAAD,KACE,kBAACvE,EAAA,EAAD,KAAYO,EAAKT,SAO/B,IAgDa0E,EAhDA,SAAClE,GACV,IAAMmE,EAAOnE,EAAMoE,OAAOA,OAAOC,KAAI,SAACpE,GACtC,OACE,yBAAKqE,IAAKrE,EAAKwD,GAAI/E,UAAU,uBAC3B,kBAACsF,EAAD,CAAgB/D,KAAMA,QAK1B,OAAID,EAAMlB,UAEJ,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKLsB,EAAMjB,QAEb,yBAAKL,UAAU,aACP,yBAAKA,UAAU,OACX,4BAAKsB,EAAMoE,OAAOrF,WAO9B,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC6F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAM9B,GAAG,SAAT,SAChB,kBAAC8B,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEF,yBAAK/F,UAAU,UACb,oCACA,+BAGJ,yBAAKA,UAAU,OACVyF,K,0BCpDTO,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IACtDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IA4Q9DU,G,kDAxQX,WAAYrF,GAAO,IAAD,8BACd,cAAMA,IAqBDsF,aAAe,EAAKA,aAAavE,KAAlB,gBAtBN,E,yDAuCLwE,GACTC,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUJ,IAClDjE,MAAM,qBAAuBoE,KAAKC,UAAUJ,IAC5CrE,KAAKlB,MAAM4F,aAAaL,EAAOM,UAAWN,EAAOO,SAAUP,EAAOQ,OAAQR,EAAOS,MAAOT,EAAOU,MAAOV,EAAOW,YAAaX,EAAOY,SACjIjF,KAAKlB,MAAMoG,sB,+BAwCN,IAAD,OAKJ,OACI,yBAAK1H,UAAU,aACX,kBAAC6F,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAM9B,GAAG,SAAT,SAChB,kBAAC8B,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAK/F,UAAU,UACX,0CACA,8BAEJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGyD,KAAK,6BAAR,wBAG5C,yBAAKzD,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY2H,KAAK,SAC5B,uBAAGA,KAAK,SAAS3H,UAAU,kBAAkByD,KAAK,oBAAmB,uBAAGzD,UAAU,gBAAlF,SACA,uBAAG2H,KAAK,SAAS3H,UAAU,gBAAe,uBAAGA,UAAU,gBAAvD,UACA,uBAAG2H,KAAK,SAAS3H,UAAU,kBAAkByD,KAAK,6BAA4B,uBAAGzD,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CAAM4H,MAAM,WAAWnD,SAAU,SAACoC,GAAD,OAAY,EAAKD,aAAaC,KAC3D,kBAACgB,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAAC2E,EAAA,EAAD,CAAOmD,IAAI,aAAaC,GAAI,GAA5B,cACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcL,MAAM,aAAa7C,GAAG,YAAYjE,KAAK,YACjDoH,YAAY,aACZlI,UAAU,eACVmI,WACI,CAACnC,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAGjE,kBAAC,SAAD,CACInG,UAAU,cACV4H,MAAM,aACNQ,KAAK,UACLC,SAAU,CACNrC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC0B,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAAC2E,EAAA,EAAD,CAAOmD,IAAI,WAAWC,GAAI,GAA1B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcL,MAAM,YAAY7C,GAAG,WAAWjE,KAAK,WAC/CoH,YAAY,YACZlI,UAAU,eACVmI,WACI,CAACnC,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAGjE,kBAAC,SAAD,CACInG,UAAU,cACV4H,MAAM,YACNQ,KAAK,UACLC,SAAU,CACNrC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC0B,EAAA,EAAD,CAAK7H,UAAU,cACf,kBAAC2E,EAAA,EAAD,CAAOC,QAAQ,SAASmD,GAAI,GAA5B,gBACI,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcL,MAAM,UAAU7C,GAAG,SAASjE,KAAK,SAC3CoH,YAAY,cACZlI,UAAU,eACVmI,WACI,CAACnC,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,IACzDG,cAGP,kBAAC,SAAD,CACGtG,UAAU,cACV4H,MAAM,UACNQ,KAAK,UACLC,SAAU,CACNrC,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAK1B,kBAACuB,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAAC2E,EAAA,EAAD,CAAOC,QAAQ,QAAQmD,GAAI,GAA3B,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcL,MAAM,SAAS7C,GAAG,QAAQjE,KAAK,QACzCoH,YAAY,QACZlI,UAAU,eACVmI,WACI,CAACnC,WAAUS,gBAGlB,kBAAC,SAAD,CACGzG,UAAU,cACV4H,MAAM,UACNQ,KAAK,UACLC,SAAU,CACNrC,SAAU,WACVS,WAAY,6BAK5B,kBAACoB,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAACgI,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,EAAGC,OAAQ,IACvB,yBAAKvI,UAAU,cACX,kBAAC2E,EAAA,EAAD,CAAOO,OAAK,GACR,kBAAC,UAAQsD,SAAT,CAAkBZ,MAAM,SACpB9G,KAAK,QACLd,UAAU,qBAHlB,IAIY,IACR,0DAIZ,kBAACgI,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,EAAGC,OAAQ,IACvB,kBAAC,UAAQE,OAAT,CACQb,MAAM,eACN9G,KAAK,eAET,wCACA,4CAIZ,kBAAC+G,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAAC2E,EAAA,EAAD,CAAOC,QAAQ,UAAUmD,GAAI,GAA7B,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQW,SAAT,CAAkBd,MAAM,WAAW7C,GAAG,UAAUjE,KAAK,UACjD6H,KAAK,KACL3I,UAAU,mBAGtB,kBAAC6H,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAACgI,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,GAAIC,OAAQ,IACxB,kBAACtE,EAAA,EAAD,CAAQa,KAAK,SAASK,MAAM,WAA5B,2B,GA7PdC,a,oBCRtB,SAASwD,GAAT,GAAsD,IAA/BC,EAA8B,EAA9BA,SAAUzI,EAAoB,EAApBA,UAAWC,EAAS,EAATA,QAElCyI,EAAWD,EAASlD,KAAI,SAACoD,GAC3B,OACA,kBAAC,gBAAD,CAAezI,IAAE,EACjBC,eAAgB,CACZC,cAAe,gCAEf,yBAAKoF,IAAKmD,EAAKhE,IACf,kBAACiE,GAAA,EAAD,CAAOC,IAAI,MACH,kBAACD,GAAA,EAAD,CAAOE,MAAI,EAACC,QAAM,GACd,kBAACH,GAAA,EAAD,CAAOI,QAAM,EAACzI,IAAKV,EAAU8I,EAAKnI,MAAOC,IAAKkI,EAAKjI,QAEvD,kBAACkI,GAAA,EAAD,CAAOK,MAAI,EAACrJ,UAAU,QAClB,kBAACgJ,GAAA,EAAD,CAAOM,SAAO,GAAEP,EAAKjI,MACjB,2BAAIiI,EAAK9H,aACT,2BAAI8H,EAAK3H,oBAQjC,OAAIhB,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKT,6BACI,kBAAC,UAAD,CAASC,IAAE,GACVwI,IAkFES,OA3Ef,SAAejI,GASX,OACI,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6F,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAM9B,GAAG,SAAT,SAChB,kBAAC8B,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAK/F,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAACS,EAAA,EAAD,KACI,kBAAC+I,GAAA,EAAD,CAAYxJ,UAAU,yBAAtB,qBACA,kBAACe,EAAA,EAAD,KACI,wBAAIf,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACS,EAAA,EAAD,KACI,kBAACM,EAAA,EAAD,CAAUf,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMyJ,MAAM,gBAAZ,0EAQpB,yBAAKzJ,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAACgJ,GAAA,EAAD,CAAOU,MAAI,GACP,kBAACd,GAAD,CAAcC,SAAUvH,EAAMqI,QAAQA,QACtCvJ,UAAWkB,EAAMQ,eACjBzB,QAASiB,EAAMS,sBC7GjCiE,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAE/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAEvDwD,G,kDAEF,WAAYtI,GAAO,IAAD,8BACd,cAAMA,IAEDW,MAAQ,CACTE,aAAa,GAGjB,EAAKG,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKuE,aAAe,EAAKA,aAAavE,KAAlB,gBARN,E,0DAYdG,KAAKC,SAAS,CACVN,aAAcK,KAAKP,MAAME,gB,mCAIpB0E,GACTrE,KAAKF,cACLE,KAAKlB,MAAMuI,YAAYrH,KAAKlB,MAAMwI,OAAOjD,EAAOkD,OAAOlD,EAAOmD,OAAOnD,EAAOoD,W,+BAGvE,IA3BM7D,EA2BP,OACJ,OACI,oCACA,kBAACnC,EAAA,EAAD,CAAQC,SAAO,EAACX,QAASf,KAAKF,aAC1B,0BAAMtC,UAAU,uBADpB,kBAIA,kBAACoE,EAAA,EAAD,CAAO1B,OAAQF,KAAKP,MAAME,YAAakC,OAAQ7B,KAAKF,aAChD,kBAACgC,EAAA,EAAD,CAAaD,OAAQ7B,KAAKF,aAA1B,kBACA,kBAACiC,EAAA,EAAD,KACI,kBAAC,YAAD,CAAWE,SAAU,SAACoC,GAAD,OAAY,EAAKD,aAAaC,KAC/C,kBAACgB,EAAA,EAAD,CAAK7H,UAAU,cACP,kBAAC2E,EAAA,EAAD,CAAOmD,IAAI,UAAUC,GAAI,GAAzB,UACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACT,kBAAC,UAAQU,OAAT,CAAgBb,MAAM,UAAU7C,GAAG,SAASjE,KAAK,SAC7CoH,YAAY,SACZlI,UAAU,gBACN,4BAAQ8C,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,QAKhB,kBAAC+E,EAAA,EAAD,CAAK7H,UAAU,cACP,kBAAC2E,EAAA,EAAD,CAAOmD,IAAI,YAAYC,GAAI,GAA3B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcL,MAAM,YAAY7C,GAAG,WAAWjE,KAAK,WAC/CoH,YAAY,YACZlI,UAAU,eACVmI,WACI,CAAEnC,YAAUK,WA5DrCD,EA4D0D,EA5DlD,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IA4DqBD,UAAWA,GAAU,OAElE,kBAAC,SAAD,CACInG,UAAU,cACV4H,MAAM,YACNQ,KAAK,UACLC,SAAU,CACNrC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAM3B,kBAAC0B,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAAC2E,EAAA,EAAD,CAAOmD,IAAI,WAAWC,GAAI,GAA1B,WACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQW,SAAT,CAAkBd,MAAM,WAAW7C,GAAG,UAAUjE,KAAK,UACjDd,UAAU,eACV2I,KAAK,QAKjB,kBAACd,EAAA,EAAD,CAAK7H,UAAU,cACX,kBAACgI,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,GAAIC,OAAQ,IACxB,kBAACtE,EAAA,EAAD,CAAQa,KAAK,SAASK,MAAM,WAA5B,oB,GApFVC,aAkGpB8E,G,kDAEF,WAAY5I,GAAO,IAAD,8BACd,cAAMA,IACDW,MAAQ,CACTkI,OAAQ,EAAK7I,MAAM8I,UAHT,E,uDAQP7I,GAEP,OAAa,MAARA,EAEG,kBAAC,gBAAD,CAAejB,IAAE,EACbC,eAAgB,CAChBC,cAAe,gCAEnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAS2J,KAAG,EAAC1J,IAAMV,EAAUsB,EAAKX,MAAOC,IAAKU,EAAKT,OACnD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYO,EAAKT,MACjB,kBAACK,EAAA,EAAD,KAAWI,EAAKH,gBAStB,gC,qCAMGkJ,EAAYT,EAAYC,GAEnC,OACI,kBAAC,OAAD,CAAMxJ,IAAE,GACR,yBAAKN,UAAU,uBACX,wCACCsK,EACD,kBAAC,GAAD,CAAaR,OAAQA,EAAQD,YAAaA,Q,6BAM/CU,GACH,IAAIC,EAAa,IAAIC,KAAKF,GACtBG,EAAQF,EAAWG,eAAe,UAAW,CAAED,MAAO,UACtDE,EAAOJ,EAAWG,eAAe,UAAW,CAAEC,KAAM,YACxD,MAAM,GAAN,OAAUF,EAAV,aAAoBE,K,+BAGf,IAAD,OAGEN,EAAc9H,KAAKP,MAAMkI,OAAOxE,KAAK,SAACmD,GAExC,OACI,yBAAKlD,IAAKkD,EAAS/D,GAAI/E,UAAU,iBAC7B,2BAAI8I,EAASmB,SACb,2BACI,8BAAO,OACNnB,EAASkB,OACV,8BAAO,MACP,8BAAO,EAAKa,OAAO/B,EAASgC,YAM5C,OAAItI,KAAKlB,MAAMlB,UAEP,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPwC,KAAKlB,MAAMjB,QAEhB,yBAAKL,UAAU,aACP,yBAAKA,UAAU,OACX,4BAAKwC,KAAKlB,MAAMjB,WAO5B,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6F,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAM9B,GAAG,SAAT,SAChB,kBAAC8B,EAAA,EAAD,CAAgBC,QAAM,GAAEvD,KAAKlB,MAAMC,KAAKT,OAE5C,yBAAKd,UAAU,UACX,4BAAKwC,KAAKlB,MAAMC,KAAKT,MACrB,+BAIR,yBAAKd,UAAU,OACf,yBAAKA,UAAU,uBACVwC,KAAKuI,WAAWvI,KAAKlB,MAAMC,OAE5B,kBAAC,UAAD,CAASjB,IAAE,GACVkC,KAAKwI,eAAeV,EAAY9H,KAAKlB,MAAMuI,YAAYrH,KAAKlB,MAAMC,KAAKwD,W,GAjHnEK,aA0HzB8E,GAAWe,aAAe,CACtBd,OAAQ,IAGGD,U,kBClHF1I,GAAgB,iBAAO,CAChCsD,KC3H0B,mBD8HjBoG,GAAe,SAACC,GAAD,MAAc,CACtCrG,KC/H0B,iBDgI1BsG,QAASD,IAGAE,GAAY,SAAC3F,GAAD,MAAa,CAClCZ,KClIsB,aDmItBsG,QAAS1F,IA0BA4F,GAAiB,SAACH,GAAD,MAAc,CACxCrG,KC5J2B,kBD6J3BsG,QAASD,IAGAI,GAAc,SAACnB,GAAD,MAAe,CACtCtF,KClKwB,eDmKxBsG,QAAShB,IAmEAzI,GAAgB,iBAAO,CAChCmD,KCrO0B,mBDwOjB0G,GAAe,SAACL,GAAD,MAAc,CACtCrG,KCvOyB,gBDwOzBsG,QAASD,IAGAM,GAAY,SAACC,GAAD,MAAa,CAClC5G,KC7OsB,aD8OtBsG,QAASM,I,kBErNPC,G,kDACF,WAAYrK,GAAQ,uCACZA,G,gEAINkB,KAAKlB,MAAMsK,cACXpJ,KAAKlB,MAAMuK,gBACXrJ,KAAKlB,MAAMwK,cACXtJ,KAAKlB,MAAMyK,iB,+BAkBN,IAAD,OA+BN,OACA,6BACE,kBAAC,EAAD,MACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAerG,IAAKpD,KAAKlB,MAAM4K,SAAStG,IAAKuG,WAAW,OAAOC,QAAS,KACtE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,QAAQC,UAnCX,WACf,OACE,kBAAC,EAAD,CACI/K,KAAM,EAAKD,MAAMoE,OAAOA,OAAO6G,QAAO,SAAChL,GAAD,OAAUA,EAAKiL,YAAU,GAC/DhL,cAAe,EAAKF,MAAMoE,OAAOtF,UACjCqB,cAAe,EAAKH,MAAMoE,OAAOrF,QACjCqB,UAAW,EAAKJ,MAAMmL,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC9E7K,cAAe,EAAKL,MAAMmL,WAAWrM,UACrCwB,cAAe,EAAKN,MAAMmL,WAAWpM,QACrCwB,OAAQ,EAAKP,MAAMqI,QAAQA,QAAQ4C,QAAO,SAACxD,GAAD,OAAUA,EAAKyD,YAAU,GACnE1K,eAAgB,EAAKR,MAAMqI,QAAQvJ,UACnC2B,eAAgB,EAAKT,MAAMqI,QAAQtJ,aAyBnC,kBAAC,KAAD,CAAOsM,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM5G,OAAQ,EAAKpE,MAAMoE,YACpE,kBAAC,KAAD,CAAO2G,KAAK,gBAAgBC,UApBjB,SAAC,GAAa,IAAZM,EAAW,EAAXA,MACnB,OACI,kBAAC,GAAD,CAAYrL,KAAM,EAAKD,MAAMoE,OAAOA,OAAO6G,QAAO,SAAChL,GAAD,OAAUA,EAAKwD,KAAO8H,SAASD,EAAME,OAAOhD,OAAO,OAAK,GACxG1J,UAAW,EAAKkB,MAAMoE,OAAOtF,UAC7BC,QAAS,EAAKiB,MAAMoE,OAAOrF,QAC3B+J,SAAU,EAAK9I,MAAM8I,SAASA,SAASmC,QAAO,SAACtC,GAAD,OAAaA,EAAQH,SAAW+C,SAASD,EAAME,OAAOhD,OAAO,OAC3GiD,gBAAiB,EAAKzL,MAAM8I,SAAS/J,QACrCwJ,YAAa,EAAKvI,MAAMuI,iBAcxB,kBAAC,KAAD,CAAO8C,OAAK,EAACN,KAAK,aAAaC,UAAW,kBAAM,kBAAC,GAAD,CAAS5E,kBAAmB,EAAKpG,MAAMoG,kBAAmBR,aAAc,EAAK5F,MAAM4F,kBACnI,kBAAC,KAAD,CAAOyF,OAAK,EAACN,KAAK,WAAWC,UAAW,kBAAM,kBAAC,GAAD,CAAO3C,QAAS,EAAKrI,MAAMqI,aACzE,kBAAC,KAAD,CAAU3F,GAAG,aAInB,kBAAC,EAAD,W,GAzEaoB,aAgFJ4H,gBAAWC,oBAnGF,SAAAhL,GACpB,MAAO,CACLyD,OAAQzD,EAAMyD,OACd0E,SAAUnI,EAAMmI,SAChBqC,WAAYxK,EAAMwK,WAClB9C,QAAS1H,EAAM0H,YAIM,SAACuD,GAAD,MAAe,CACxCrD,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCiD,EFmCzB,SAACpD,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACiD,GAC7D,IAAMC,EAAa,CACfrD,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAKb,OAFAkD,EAAWrC,MAAO,IAAIL,MAAO2C,cAEtBC,MAAMpN,EAAU,WAAY,CAC/BqN,OAAQ,OACRjE,KAAMrC,KAAKC,UAAUkG,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAGhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAIP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADe,IAAIC,MAAMD,EAAMnG,YAI9BgG,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EA3FA,SAACjD,GAAD,MAAc,CACpCnF,KCLuB,cDMvBsG,QAASnB,GAyFsBgE,CAAWP,OACrCQ,OAAM,SAAAN,GAAW9G,QAAQC,IAAI,gBAAiB6G,EAAMnG,SACjD7E,MAAM,4CAA6CgL,EAAMnG,aEzERoC,CAAYC,EAAQC,EAAQC,EAAQC,KAC/F/C,aAAc,SAACC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OAAqEyF,EFXzD,SAAC/F,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OAAqE,SAACyF,GAE9F,IAAMiB,EAAc,CAChBhH,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAKb,OAFA0G,EAAYrD,MAAO,IAAIL,MAAO2C,cAEvBC,MAAMpN,EAAU,WAAY,CAC/BqN,OAAQ,OACRjE,KAAMrC,KAAKC,UAAUkH,GACrBZ,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAGhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAIP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADe,IAAIC,MAAMD,EAAMnG,YAI9BgG,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EA7CgB,CACtCpI,KCTwB,eDUxBsG,QA2C2CsC,OACtCQ,OAAM,SAAAN,GAAW9G,QAAQC,IAAI,gBAAiB6G,EAAMnG,SACjD7E,MAAM,6CAA8CgL,EAAMnG,aE/BwBP,CAAaC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,KACjKmE,YAAa,WAAOsB,GF0EW,SAACA,GAG9B,OAFAA,EAAS1L,IAAc,IAEhB6L,MAAMpN,EAAU,UAClBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAIP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADe,IAAIC,MAAMD,EAAMnG,YAGlCgG,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA/H,GAAM,OAAIwH,EAAS7B,GAAU3F,OAClCwI,OAAM,SAAAN,GAAK,OAAIV,EAAShC,GAAa0C,EAAMnG,iBE9FlDC,kBAAmB,WAAQwF,EAASkB,UAAQC,MAAM,cAClDxC,cAAe,WAAOqB,GF8GW,SAACA,GAEhC,OAAOG,MAAMpN,EAAU,YAClBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAIP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADe,IAAIC,MAAMD,EAAMnG,YAGlCgG,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAArD,GAAQ,OAAI8C,EAAS3B,GAAYnB,OACtC8D,OAAM,SAAAN,GAAK,OAAIV,EAAS5B,GAAesC,EAAMnG,iBEjIpDqE,YAAa,WAAOoB,GF8IW,SAACA,GAG9B,OAFAA,EAASvL,IAAc,IAEhB0L,MAAMpN,EAAU,cAClBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAIP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADe,IAAIC,MAAMD,EAAMnG,YAGlCgG,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA/B,GAAM,OAAIwB,EAASzB,GAAUC,OAClCwC,OAAM,SAAAN,GAAK,OAAIV,EAAS1B,GAAaoC,EAAMnG,iBElKlDsE,aAAc,WAAOmB,GFoLW,SAACA,GAG/B,OAFAA,EAfiC,CACjCpI,KC1L2B,oBD0MpBuI,MAAMpN,EAAU,WAClBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAIP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADe,IAAIC,MAAMD,EAAMnG,YAGlCgG,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA9D,GAAO,OAAIuD,EAzBC,SAACvD,GAAD,MAAc,CACpC7E,KCpMuB,cDqMvBsG,QAASzB,GAuBqB2E,CAAW3E,OACpCuE,OAAM,SAAAN,GAAK,OAAIV,EA/BmB,CACvCpI,KC7L0B,iBD8L1BsG,QA6B2CwC,EAAMnG,oBEtH3BwF,CAA6CtB,K,0BC/G1D4C,GAAS,WAIN,IAJOtM,EAIR,uDAJgB,CAC3B7B,WAAW,EACXC,QAAS,KACTqF,OAAQ,IACT8I,EAAY,uCACX,OAAOA,EAAO1J,MACV,IFJkB,aEKd,OAAO,6BAAI7C,GAAX,IAAkB7B,WAAW,EAAOC,QAAS,KAAMqF,OAAQ8I,EAAOpD,UAEtE,IFTsB,iBEUlB,OAAO,6BAAInJ,GAAX,IAAkB7B,WAAW,EAAMC,QAAS,KAAMqF,OAAQ,KAG9D,IFZqB,gBEajB,OAAO,6BAAIzD,GAAX,IAAkB7B,WAAW,EAAOC,QAASmO,EAAOpD,QAAS1F,OAAQ,KAEzE,QACI,OAAOzD,IChBNwM,GAAW,WAGR,IAHSxM,EAGV,uDAHkB,CAC7B5B,QAAS,KACT+J,SAAU,IACXoE,EAAY,uCACX,OAAOA,EAAO1J,MACV,IHHoB,eGIhB,OAAO,6BAAI7C,GAAX,IAAkB7B,WAAW,EAAOC,QAAS,KAAM+J,SAAUoE,EAAOpD,UAExE,IHLuB,kBGMnB,OAAO,6BAAInJ,GAAX,IAAkB7B,WAAW,EAAOC,QAASmO,EAAOpD,QAAShB,SAAU,KAE3E,IHdmB,cGef,IAAIH,EAAUuE,EAAOpD,QACrB,OAAO,6BAAInJ,GAAX,IAAkBmI,SAAUnI,EAAMmI,SAASsE,OAAOzE,KACtD,QACI,OAAOhI,IChBN0M,GAAa,WAIV,IAJW1M,EAIZ,uDAJoB,CAC/B7B,WAAW,EACXC,QAAS,KACToM,WAAY,IACb+B,EAAY,uCACX,OAAOA,EAAO1J,MACV,IJAkB,aICd,OAAO,6BAAI7C,GAAX,IAAkB7B,WAAW,EAAOC,QAAS,KAAMoM,WAAY+B,EAAOpD,UAE1E,IJJsB,iBIKlB,OAAO,6BAAInJ,GAAX,IAAkB7B,WAAW,EAAMC,QAAS,KAAMoM,WAAY,KAElE,IJLqB,gBIMjB,OAAO,6BAAIxK,GAAX,IAAkB7B,WAAW,EAAOC,QAASmO,EAAOpD,QAASqB,WAAY,KAE7E,QACI,OAAOxK,IChBN2M,GAAU,WAIP,IAJQ3M,EAIT,uDAJiB,CAC5B7B,WAAW,EACXC,QAAS,KACTsJ,QAAS,IACV6E,EAAY,uCACX,OAAOA,EAAO1J,MACV,ILEmB,cKDf,OAAO,6BAAI7C,GAAX,IAAkB7B,WAAW,EAAOC,QAAS,KAAMsJ,QAAS6E,EAAOpD,UAEvE,ILAuB,kBKCnB,OAAO,6BAAInJ,GAAX,IAAkB7B,WAAW,EAAMC,QAAS,KAAMsJ,QAAS,KAE/D,ILFsB,iBKGlB,OAAO,6BAAI1H,GAAX,IAAkB7B,WAAW,EAAOC,QAASmO,EAAOpD,QAASzB,QAAS,KAE1E,QACI,OAAO1H,I,6BClBN4M,GAAkB,CAC3B1H,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,ICAPqH,GCIYC,uBACXC,2BAAgB,cACZtJ,OAAQ6I,GACRnE,SAAUqE,GACVhC,WAAYkC,GACZhF,QAASiF,IACNK,sBAAY,CACXC,SAAUL,OAGlBM,2BAAgBC,KAAOC,ODIfC,G,uKAbX,OACA,kBAAC,YAAD,CAAUR,MAAOA,IACf,kBAAC,IAAD,KACE,6BACE,kBAAC,GAAD,a,GAPQ1J,aEGEmK,QACW,cAA7BC,OAAOtD,SAASuD,UAEe,UAA7BD,OAAOtD,SAASuD,UAEhBD,OAAOtD,SAASuD,SAAS7C,MACvB,2DCTN8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdjC,OAAM,SAAAN,GACL9G,QAAQ8G,MAAMA,EAAMnG,a","file":"static/js/main.a43b20fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinnner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p> \r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n\r\n    if (isLoading){\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n    return(\r\n        <FadeTransform in \r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n        <Card>\r\n            <CardImg src={baseUrl + item.image} alt={item.name} />\r\n            <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n    );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promosLoading} \r\n                    errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Col, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" + this.password.value\r\n            + \"Remember: \" + this.remember.checked );\r\n        event.preventDefault();   \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                    <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                    alt=\"Ristorante Con Fusion\" />\r\n                </NavbarBrand>\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"></span>Home\r\n                            </NavLink>    \r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\"></span>About Us\r\n                            </NavLink>    \r\n                        </NavItem> \r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                <span className=\"fa fa-list fa-lg\"></span>Menu\r\n                            </NavLink>    \r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                <span className=\"fa fa-address-card fa-lg\"></span>Contact Us\r\n                            </NavLink>    \r\n                        </NavItem>   \r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, \r\n                                and create a unique fusion experience. Our lipsmacking creations \r\n                                will tickle your culinary senses!\r\n                            </p>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                innerRef={(input) => this.username = input}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\" \r\n                                innerRef={(input) => this.password = input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\" \r\n                                    innerRef={(input) => this.remember = input}/>\r\n                                Remember me\r\n                            </Label>                          \r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        <li><Link to=\"/aboutus\">About us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n  CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\n  function RenderMenuItem({ dish, onClick }){\r\n      return(\r\n        <Card>\r\n          <Link to={`/menu/${dish.id}`}>\r\n              <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n              <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n              </CardImgOverlay>\r\n          </Link>\r\n        </Card>\r\n      );\r\n  }\r\n\r\n  const Menu = (props) => {\r\n      const menu = props.dishes.dishes.map((dish) => {\r\n      return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n          <RenderMenuItem dish={dish}/>\r\n        </div>\r\n      );\r\n      });\r\n\r\n      if (props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n      else if (props.errMess){\r\n        return(\r\n        <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );    \r\n      }\r\n      else\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Menu</h3>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n              {menu}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n      \r\nexport default Menu;\r\n\r\n/*\r\n{this.renderDish(this.state.selectedDish)}\r\nonClick={() => this.onDishSelect(dish)}*/ ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col,\r\n    Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        /*Now is controlled by React-Redux-Form\r\n        \r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }*/\r\n\r\n        //this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n\r\n\r\n    /*Controlled by React-redux-form\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }*/\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    /*Controlled by React-Redux-Form\r\n    \r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        })\r\n    }*/\r\n\r\n    /*Controlled by React-Redux-Form\r\n    validate(firstname, lastname, telnum, email){\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if ( this.state.touched.firstname && firstname.length < 3 )\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if ( this.state.touched.firstname && firstname.length > 10 )\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if ( this.state.touched.lastname && lastname.length < 3 )\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if ( this.state.touched.lastname && lastname.length > 10 )\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }*/\r\n\r\n    render(){\r\n\r\n        /*const errors = this.validate(this.state.firstname, this.state.lastname, \r\n            this.state.telnum, this.state.email);*/\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\".firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={\r\n                                            {required, minLength: minLength(3), maxLength: maxLength(15)}\r\n                                        } \r\n                                       />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={\r\n                                            {required, minLength: minLength(3), maxLength: maxLength(15)}\r\n                                        }  \r\n                                        />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />                                       \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        className=\"form-control\"\r\n                                        validators={\r\n                                            {required, minLength: minLength(3), maxLength: maxLength(15),\r\n                                            isNumber}\r\n                                        }  \r\n                                       />\r\n                                     <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />                                         \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={\r\n                                            {required, validEmail}\r\n                                        }  \r\n                                       />\r\n                                     <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email Address'\r\n                                        }}\r\n                                    />                          \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select\r\n                                            model=\".contactType\" \r\n                                            name=\"contactType\"\r\n                                            >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({leaderss, isLoading, errMess}){\n    \n    const variable = leaderss.map((lead) => {\n        return(\n        <FadeTransform in \n        transformProps={{\n            exitTransform: 'scale(0.5) translateY(-50%)'\n        }}>\n            <div key={lead.id}>\n            <Media tag=\"li\">\n                    <Media left middle>\n                        <Media object src={baseUrl + lead.image} alt={lead.name} />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{lead.name}</Media>\n                            <p>{lead.designation}</p>\n                            <p>{lead.description}</p>\n                    </Media>\n                </Media>\n            </div>\n        </FadeTransform>\n        );\n    });\n\n    if (isLoading){\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else{\n    return (\n        <div>\n            <Stagger in>\n            {variable}\n            </Stagger>\n        </div>\n    );\n    }\n}\n\nfunction About(props) {\n\n    //ANTES....\n    /*const leaders = props.leaders.map((leader) => {\n        return (\n            <p>Leader {leader.name}</p>\n        );\n    });*/\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <RenderLeader leaderss={props.leaders.leaders} \n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}/>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, \r\n  ModalBody, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors, Field } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n\r\nclass CommentForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>         \r\n            <Button outline onClick={this.toggleModal}>\r\n                <span className=\"fa fa-pencil fa-lg\"></span>Submit Comment\r\n            </Button>\r\n            \r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label for=\".rating\" md={3}>Rating</Label>\r\n                                <Col md={12}>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    placeholder=\"Rating\"\r\n                                    className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                </Control.select>\r\n                                </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                                <Label for=\".yourname\" md={3}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={\r\n                                            { required, minLength: minLength(3), maxLength: maxLength(15) }}\r\n                                       />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\".comment\" md={3}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"                                     \r\n                                        className=\"form-control\"\r\n                                        rows=\"6\"\r\n                                       />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 0}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nclass DishDetail extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            coment: this.props.comments \r\n        }; \r\n    }\r\n\r\n    /*First card showing first part of dish information...*/ \r\n    renderDish(dish){\r\n\r\n        if ( dish != null ){\r\n            return(\r\n                <FadeTransform in \r\n                    transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={ baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return( \r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*Second card showing second part of dish information...*/\r\n    renderComments(comentarios,postComment,dishId){\r\n\r\n        return (\r\n            <Fade in>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                {comentarios}\r\n                <CommentForm dishId={dishId} postComment={postComment}/>\r\n            </div>\r\n            </Fade>\r\n        );\r\n    }\r\n\r\n    dating(param){\r\n        var dateToDate = new Date(param);\r\n        var month = dateToDate.toLocaleString('default', { month: 'short' });\r\n        var year = dateToDate.toLocaleString('default', { year: 'numeric' });\r\n        return `${month}, ${year}`;\r\n    }\r\n\r\n    render(){\r\n        \r\n        //console.log(this.props.comments);\r\n        const comentarios = this.state.coment.map( (variable) => \r\n            {\r\n            return (\r\n                <div key={variable.id} className=\"list-unstyled\">\r\n                    <p>{variable.comment}</p>\r\n                    <p>\r\n                        <span>{\"-- \"}</span>\r\n                        {variable.author}\r\n                        <span>{\", \"}</span>\r\n                        <span>{this.dating(variable.date)}</span>\r\n                    </p>\r\n                </div>\r\n            );    \r\n        });\r\n\r\n        if (this.props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.errMess){\r\n            return(\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{this.props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );    \r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{this.props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    {this.renderDish(this.props.dish)}\r\n                </div>  \r\n                    <Stagger in>           \r\n                    {this.renderComments(comentarios,this.props.postComment,this.props.dish.id)}\r\n                    </Stagger>\r\n                </div>           \r\n            </div>      \r\n        );\r\n    }\r\n\r\n}\r\n\r\nDishDetail.defaultProps = {\r\n    coment: []\r\n}\r\n\r\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    \r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else\r\n        {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var  errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedback(response)))\r\n        .catch(error => { console.log('Post Feedback', error.message)\r\n            alert('Your feedback could not be posted\\nError: '+ error.message); })\r\n}\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else\r\n        {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var  errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('Post comments', error.message)\r\n            alert('Your comment could not be posted\\nError: '+ error.message); })\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var  errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var  errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var  errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n//ASSIGNMENT 4 TASK//\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var  errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n//////////////////////////\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n\r\n    /*renderDish(dish){\r\n        if ( dish != null )\r\n        {\r\n            return(               \r\n                <DishDetail dishes={dish} comments={dish.comments}/>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }*/\r\n\r\n  render(){\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home\r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promosLoading={this.props.promotions.isLoading}\r\n            promosErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((lead) => lead.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n    \r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess} \r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n            />\r\n      );\r\n    };\r\n\r\n    return (\r\n    <div>\r\n      <Header />\r\n      <TransitionGroup>\r\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage} />\r\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n            <Route path='/menu/:dishId' component={DishWithId} />\r\n            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n            <Redirect to=\"/home\" /> \r\n          </Switch>\r\n          </CSSTransition>\r\n      </TransitionGroup>\r\n      <Footer />\r\n    </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n/*\r\n{this.renderDish(this.state.dishes.filter(\r\n          (dish) => dish.id  === this.state.selectedDish )[0]  \r\n        )}\r\n*/\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action ) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n            \r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action ) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload };\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action ) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n            \r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action ) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n            \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n    return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>   \n    );\n  }\n  \n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n       combineReducers({\r\n           dishes: Dishes,\r\n           comments: Comments,\r\n           promotions: Promotions,\r\n           leaders: Leaders,\r\n           ...createForms({\r\n               feedback: InitialFeedback\r\n           })\r\n       }),\r\n       applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}